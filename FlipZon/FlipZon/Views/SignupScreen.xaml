<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="FlipZon.Views.SignupScreen"
             xmlns:vm="clr-namespace:FlipZon.ViewModels"
             xmlns:customRenders="clr-namespace:FlipZon.CustomRenders"
             x:DataType="vm:SignupScreenViewModel"
                xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:resx="clr-namespace:FlipZon.Resources.Localization"
             Title="SignupScreen">
    <VerticalStackLayout Margin="10"
                         Spacing="15">
        <ImageButton Source="back_arrow.png"
                     WidthRequest="25"
                     HeightRequest="25"
                     VerticalOptions="Start"
                     HorizontalOptions="Start"
                     Command="{Binding BackCommand}"
                     BackgroundColor="Transparent" />
        <VerticalStackLayout Spacing="3"
                             Margin="0,20,0,0">
            <Label Text="{x:Static resx:MobileLabel.Signup}"
                   TextColor="{AppThemeBinding Light={x:StaticResource BlackColor},Dark={x:StaticResource DarkBlackColor}}"
                   FontAttributes="Bold"
                   FontSize="30" />
            <HorizontalStackLayout Spacing="3">
                <Label Text="{x:Static resx:MobileLabel.Already_have_an_Account}"
                       FontAttributes="Bold" />
                <Label Text="{x:Static resx:MobileLabel.Sign_In}"
                       TextColor="{AppThemeBinding Light={x:StaticResource OrangeColor},Dark={x:StaticResource DarkOrangeColor}}"
                       TextDecorations="Underline">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1"
                                              Command="{Binding LoginCommad}" />
                    </Label.GestureRecognizers>
                </Label>
            </HorizontalStackLayout>
        </VerticalStackLayout>
        <VerticalStackLayout Spacing="5">
            <Label Text="{x:Static resx:MobileLabel.Name}"
                   FontAttributes="Bold" />
            <Frame Style="{x:StaticResource FrameStyle}">
                <customRenders:CustomEntry Placeholder="{x:Static resx:MobileLabel.Enter_your_Name}"
                                           Margin="5,0"
                                           Text="{Binding Name}"
                                                toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference EmailEntry}"
                                           PlaceholderColor="{AppThemeBinding Light={x:StaticResource GrayColor},Dark={x:StaticResource DarkGrayColor}}" />
            </Frame>
        </VerticalStackLayout>
        <VerticalStackLayout Spacing="5">
            <Label Text="{x:Static resx:MobileLabel.Email}"
                   FontAttributes="Bold" />
            <Frame Style="{x:StaticResource FrameStyle}">
                <customRenders:CustomEntry Placeholder="{x:Static resx:MobileLabel.Enter_Your_Email}"
                                           Margin="5,0"
                                           Text="{Binding Email}"
                                           x:Name="EmailEntry"
                                           Keyboard="Email"
                                               toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference PasswordEntry}"
                                           PlaceholderColor="{AppThemeBinding Light={x:StaticResource GrayColor},Dark={x:StaticResource DarkGrayColor}}" />
            </Frame>
        </VerticalStackLayout>
        <VerticalStackLayout Spacing="5">
            <Label Text="{x:Static resx:MobileLabel.Password}"
                   FontAttributes="Bold" />
            <Frame Style="{x:StaticResource FrameStyle}">
                <Grid ColumnDefinitions="*,Auto"
                      ColumnSpacing="5"
                      Padding="5,0">
                    <customRenders:CustomEntry Placeholder="{x:Static resx:MobileLabel.Enter_your_Password}"
                                               IsPassword="{Binding CanShowPassword,Converter={x:StaticResource inverseBoolConverter}}"
                                               Grid.Column="0"
                                               Text="{Binding Password}"
                                               x:Name="PasswordEntry"
                                                toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference ConfirmPasswordEntry}"
                                               PlaceholderColor="{AppThemeBinding Light={x:StaticResource GrayColor},Dark={x:StaticResource DarkGrayColor}}" />
                    <ImageButton Source="eye_close.png"
                                 WidthRequest="20"
                                 HeightRequest="20"
                                 Grid.Column="1"
                                 Command="{Binding TogglePasswordVisiblityCommand}"
                                 VerticalOptions="Center">
                        <ImageButton.Triggers>
                            <DataTrigger TargetType="ImageButton"
                                         Binding="{Binding CanShowPassword}"
                                         Value="True">
                                <Setter Property="Source"
                                        Value="eye_open.png" />
                            </DataTrigger>
                        </ImageButton.Triggers>
                    </ImageButton>
                </Grid>
            </Frame>
        </VerticalStackLayout>
      <VerticalStackLayout Spacing="5">
            <Label Text="{x:Static resx:MobileLabel.Confirm_Password}"
                   FontAttributes="Bold" />
            <Frame Style="{x:StaticResource FrameStyle}">
                <Grid ColumnDefinitions="*,Auto"
                      ColumnSpacing="5"
                      Padding="5,0">
                    <customRenders:CustomEntry Placeholder="{x:Static resx:MobileLabel.Enter_Confirm_Password}"
                                               IsPassword="{Binding CanShowPassword,Converter={x:StaticResource inverseBoolConverter}}"
                                               Grid.Column="0"
                                               Text="{Binding Confirmpassword}"
                                               x:Name="ConfirmPasswordEntry"
                                               PlaceholderColor="{AppThemeBinding Light={x:StaticResource GrayColor},Dark={x:StaticResource DarkGrayColor}}" />
                    <ImageButton Source="eye_close.png"
                                 WidthRequest="20"
                                 HeightRequest="20"
                                 Grid.Column="1"
                                 Command="{Binding TogglePasswordVisiblityCommand}"
                                 VerticalOptions="Center">
                        <ImageButton.Triggers>
                            <DataTrigger TargetType="ImageButton"
                                         Binding="{Binding CanShowPassword}"
                                         Value="True">
                                <Setter Property="Source"
                                        Value="eye_open.png" />
                            </DataTrigger>
                        </ImageButton.Triggers>
                    </ImageButton>
                </Grid>
            </Frame>
        </VerticalStackLayout>
        <VerticalStackLayout Margin="0,20,0,0">
            <Button Text="{x:Static resx:MobileLabel.Signup}"
                    CornerRadius="20"
                    HeightRequest="40"
                    Command="{Binding SignupCommand}"
                    BackgroundColor="{AppThemeBinding Light={x:StaticResource OrangeColor},Dark={x:StaticResource DarkOrangeColor}}"
                    TextColor="{AppThemeBinding Light={x:StaticResource WhiteColor},Dark={x:StaticResource DarkWhiteColor}}"
                    FontAttributes="Bold" />
        </VerticalStackLayout>
    </VerticalStackLayout>
</ContentPage>