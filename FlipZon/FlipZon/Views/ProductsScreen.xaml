<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             NavigationPage.HasNavigationBar="True"
             xmlns:customcontrols="clr-namespace:FlipZon.CustomControls"
             xmlns:models="clr-namespace:FlipZon.Models"
             xmlns:FAIcons="clr-namespace:FlipZon.Utilities.Helpers"
             x:Class="FlipZon.Views.ProductsScreen"
             BackgroundColor="White"
             xmlns:vm="clr-namespace:FlipZon.ViewModels"
             x:DataType="vm:ProductsScreenViewModel"
             Title="ProductsScreen">
    <Grid RowDefinitions="Auto,Auto,Auto,*,Auto"
          RowSpacing="10">
        <Grid ColumnDefinitions="Auto,*"
              ColumnSpacing="10"
              Padding="10,5">
            <ImageButton Source="back_arrow.png"
                         WidthRequest="25"
                         HeightRequest="25"
                         VerticalOptions="Start"
                         HorizontalOptions="Start"
                         Command="{Binding BackCommand}"
                         BackgroundColor="Transparent" />
            <Label Text="Products Screen"
                   Grid.Column="1"
                   HorizontalTextAlignment="Center"
                   VerticalTextAlignment="Center"
                   TextColor="BlueViolet"
                   FontSize="14" />
        </Grid>
        <Grid ColumnDefinitions="*,Auto"
              Grid.Row="1"
              Padding="10,0">
            <Label Text="Products"
                   VerticalTextAlignment="Center"
                   TextColor="Green" />
            <HorizontalStackLayout Grid.Column="1"
                                   Spacing="10">
                <ImageButton Source="tile_black.png"
                             WidthRequest="25"
                             HeightRequest="25"
                             BackgroundColor="Transparent"
                             Command="{Binding ToggleProductsView}"
                             CommandParameter="ListView">
                    <ImageButton.Triggers>
                        <DataTrigger TargetType="ImageButton"
                                     Binding="{Binding CanShowListView}"
                                     Value="True">
                            <Setter Property="Source"
                                    Value="tile_orange.png" />
                        </DataTrigger>
                    </ImageButton.Triggers>
                </ImageButton>
                <ImageButton Source="grid_black.png"
                             WidthRequest="25"
                             HeightRequest="25"
                             Command="{Binding ToggleProductsView}"
                             CommandParameter="TileView">
                    <ImageButton.Triggers>
                        <DataTrigger TargetType="ImageButton"
                                     Binding="{Binding CanShowListView}"
                                     Value="False">
                            <Setter Property="Source"
                                    Value="grid_orange" />
                        </DataTrigger>
                    </ImageButton.Triggers>
                </ImageButton>
            </HorizontalStackLayout>
        </Grid>
        <CollectionView ItemsSource="{Binding Categories}"
                        HeightRequest="35"
                        Margin="10,0"
                        x:Name="CategoriesCollection"
                        HorizontalScrollBarVisibility="Never"
                        Grid.Row="2">
            <CollectionView.ItemsLayout>
                <GridItemsLayout Orientation="Horizontal"
                                 HorizontalItemSpacing="5" />
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="models:Category">
                    <Frame Padding="10,0"
                           CornerRadius="5"
                           HasShadow="False">
                        <Label Text="{Binding Name}"
                               FontSize="12"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="Center">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding IsActive}"
                                             Value="True">
                                    <Setter Property="TextColor"
                                            Value="White" />
                                </DataTrigger>
                                <DataTrigger TargetType="Label"
                                             Binding="{Binding IsActive}"
                                             Value="False">
                                    <Setter Property="TextColor"
                                            Value="Black" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Frame.Triggers>
                            <DataTrigger TargetType="Frame"
                                         Binding="{Binding IsActive}"
                                         Value="True">
                                <Setter Property="BackgroundColor"
                                        Value="Black" />
                            </DataTrigger>
                            <DataTrigger TargetType="Frame"
                                         Binding="{Binding IsActive}"
                                         Value="False">
                                <Setter Property="BackgroundColor"
                                        Value="Gray" />
                            </DataTrigger>
                        </Frame.Triggers>
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer NumberOfTapsRequired="1"
                                                  Command="{Binding Source={x:Reference CategoriesCollection},Path=BindingContext.FilterProductsByCategoryCommand}"
                                                  CommandParameter="{Binding .}" />
                        </Frame.GestureRecognizers>
                    </Frame>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>
        <CollectionView ItemsSource="{Binding Products}"
                        VerticalScrollBarVisibility="Never"
                        Grid.Row="3"
                        Margin="10,0"
                        IsVisible="{Binding CanShowListView,Converter={x:StaticResource inverseBoolConverter}}"
                        x:Name="ProductsCollection">
            <CollectionView.ItemsLayout>
                <GridItemsLayout Orientation="Vertical"
                                 Span="2"
                                 HorizontalItemSpacing="5"
                                 VerticalItemSpacing="5" />
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="models:Product">
                    <customcontrols:ProductTileView ThumbNail="{Binding Thumbnail}"
                                                    Title="{Binding Title}"
                                                    Rating="{Binding Rating}"
                                                    OrginalPrice="{Binding Price}"
                                                    DiscountedPrice="{Binding DiscountedPrice}"
                                                    Description="{Binding Description}"
                                                    ProductTappedCommand="{Binding Source={x:Reference ProductsCollection},Path=BindingContext.NavigateToDetailsScreen}" />
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>
        <CollectionView ItemsSource="{Binding Products}"
                        Margin="10,0"
                        IsVisible="{Binding CanShowListView}"
                        VerticalScrollBarVisibility="Never"
                        Grid.Row="3"
                        x:Name="ProductsCollectionListView">
            <CollectionView.ItemsLayout>
                <GridItemsLayout Orientation="Vertical"
                                 VerticalItemSpacing="10" />
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="models:Product">
                    <customcontrols:ProductTileView ThumbNail="{Binding Thumbnail}"
                                                    Title="{Binding Title}"
                                                    Rating="{Binding Rating}"
                                                    OrginalPrice="{Binding Price}"
                                                    DiscountedPrice="{Binding DiscountedPrice}"
                                                    Description="{Binding Description}"
                                                    ProductTappedCommand="{Binding Source={x:Reference ProductsCollection},Path=BindingContext.NavigateToDetailsScreen}" />
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>
        <VerticalStackLayout Grid.Row="4"
                             IsVisible="{Binding IsAllTabSelected}">
            <VerticalStackLayout Spacing="10"
                                 Padding="10"
                                 IsVisible="{Binding IsLoadingMoreProducts}"
                                 VerticalOptions="FillAndExpand"
                                 HorizontalOptions="FillAndExpand"
                                 BackgroundColor="Gray">
                <ActivityIndicator IsRunning="{Binding IsLoadingMoreProducts}"
                                   Color="Purple"
                                   WidthRequest="30"
                                   HeightRequest="30"/>
                <Label Text="Hang on Loading More Products"
                       VerticalTextAlignment="Center"
                       HorizontalTextAlignment="Center"
                       TextColor="Purple" />
            </VerticalStackLayout>
            <Button Text="{Binding ButtonText}"
                    IsVisible="{Binding IsLoadingMoreProducts,Converter={x:StaticResource inverseBoolConverter}}"
                    Command="{Binding LoadMoreProducts}"
                    TextColor="Purple"
                    Margin="0,0,0,6"
                    IsEnabled="{Binding IsMoreButtonEnabled}"
                    VerticalOptions="Center"
                    HorizontalOptions="Center" />
        </VerticalStackLayout>
        <customcontrols:CustomLoadingIndicator IsBusy="{Binding IsBusy}"
                                               Grid.RowSpan="5"/>
    </Grid>
</ContentPage>